@using DotNetNuke.Collections
@using DotNetNuke.Web.Mvc.Helpers
@using DotNetNuke.Web.Mvc
<div class="dnnContactList">
    @RenderBody()
</div>

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.js"></script>

<script src="https://unpkg.com/filepond-plugin-file-encode/dist/filepond-plugin-file-encode.min.js" type="text/javascript"></script>
<script src="https://unpkg.com/filepond/dist/filepond.min.js" type="text/javascript"></script>
<script type="text/javascript" src="https://momentjs.com/downloads/moment.js"></script>
<script>
          var rvtoken = $("input[name='__RequestVerificationToken']").val();
        var ModuleId = @Dnn.ModuleContext.ModuleId;
        var TabId = @Dnn.ModuleContext.TabId;
        var siteRoot = dnn.getVar("sf_siteRoot", "/");
    $(document).ready(function () {
        $('.input-date').each(function () {
            $(this).datepicker({ format: 'mm/dd/yyyy' });
            if ($(this).val()) {
                var d = moment($(this).val());
                $(this).val(d.format('MM/DD/YYYY'));
            }
        });
        $('.format-date').each(function () {
            var d = moment($(this).text());
            $(this).text(d.format('MM/DD/YYYY')); });


    });


    function b64toBlob(b64Data, contentType, sliceSize) {
        contentType = contentType || '';
        sliceSize = sliceSize || 512;

        var byteCharacters = atob(b64Data);
        var byteArrays = [];

        for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
            var slice = byteCharacters.slice(offset, offset + sliceSize);

            var byteNumbers = new Array(slice.length);
            for (var i = 0; i < slice.length; i++) {
                byteNumbers[i] = slice.charCodeAt(i);
            }

            var byteArray = new Uint8Array(byteNumbers);

            byteArrays.push(byteArray);
        }

        var blob = new Blob(byteArrays, { type: contentType, name: 'hey' });

        return blob;
    }

    pond.on('addfile', (error, file) => {
        if (error) {
            console.log('Oh no');
            return;
        }
        console.log('File added', file);
    });
</script>
@RenderSection("scripts", required: false)

<style>
    tr:nth-of-type(odd) {
        background: #f4f4f4;
    }

    tr:nth-of-type(even) {
        background: #fff;
    }
    .removableitemdiv {
        display: inline-block;
        max-width: 90%;
        white-space: nowrap;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
 
</style>